{"version":3,"file":"runtime-dom.global.js","sources":["../../shared/src/index.ts","../../runtime-core/src/vnnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/components.ts","../../runtime-core/src/render.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/event.ts","../src/modules/style.ts","../src/patchProp.ts","../src/index.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\nexport const extend = Object.assign\nexport const isArray = Array.isArray;\nexport const isFunction = (value) => typeof value == 'function'\nexport const isNumber = (value) => typeof value == 'number';\nexport const isString = (value) => typeof value === 'string';\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\n\n\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\n\nexport const hasChanged = (oldValue,value) => oldValue !== value\n\nexport * from './shapeFlag';","import { isArray, isObject, isString, ShapeFlags } from \"@vue/shared/src\"\n\nexport const createVNode = (type,props,children = null) => {\n    // 根据type 来区分是组件(对象)， 还是普通的元素(字符串)\n\n    // 给虚拟节点加一个类型\n\n    /**\n     * 什么叫虚拟节点？\n     *  就是用一个对象来描述对应的内容，\n     *  虚拟节点有跨平台的能力\n     */\n    \n    const shapeFlag = isString(type) ? ShapeFlags.ELEMENT : isObject(type) ? ShapeFlags.STATEFUL_COMPONENT : 0; \n\n    const vnode = {\n        __v_isVnode: true, // 标识：是一个vnode\n        type,\n        props,\n        children,\n        component: null, //存放组件对应的实例  -》 实例根据组件创建\n        el: null, // 将虚拟节点和真实dom做一个映射\n        key: props && props.key, // key 主要用于diff算法\n        shapeFlag\n    }\n\n    /**\n     * 如果是一个元素，需要判断当前元素的儿子，eg: 当前元素下有两个子节点\n     *   <div> span p </div>\n     * \n     * 如果是一个组件，组件里面可能没有子节点，或者 组件里面有slot插槽\n     * \n     */\n    normalizeChildren(vnode,children);\n    return vnode;\n}\n\nfunction normalizeChildren(vnode,children) {\n    let type = 0;\n    if(children == null) {\n\n    } else if(isArray(children)) {\n        type = ShapeFlags.ARRAY_CHILDREN;\n    } else {\n        type = ShapeFlags.TEXT_CHILDREN;\n    }\n    /**\n     * 为什么用自己和自己的儿子做 或 运算？\n     *   + 因为这样就可以区分自己是什么类型，自己的儿子是什么类型了 \n     */\n\n     vnode.shapeFlag = vnode.shapeFlag | type;\n}","import { createVNode } from \"./vnnode\";\n\nexport function createAppApi(render) {\n    // 告诉他哪个组件，哪个属性来创建应用\n    return function createApp(rootComponent,rootProps) {\n        const app = {\n            _props: rootProps,\n            _component: rootComponent,\n            _container: null,\n            mount(container) {\n                // let vnode = {};\n                // render(vnode,container)  \n                \n                // 1.根据组件创建虚拟节点\n                // 2.将虚拟节点和容器获取到后调用render方法进行渲染\n\n                /**\n                 * 创建虚拟节点\n                 */\n                let vnode = createVNode(rootComponent,rootProps);\n                 /**\n                  * 调用render方法进行渲染\n                  */ \n                //  let vnode = {};\n                render(vnode,container)   \n                app._container = container; \n            }\n        }\n       return app;\n    }\n}","export const createComponentInstance = (vnode) => {\n    const instance = { // 组件的实例\n        vnode,\n        \n    }\n    return instance;\n}\n\nexport const setupCompent = (instance) => {\n    \n}","// createRenderer 目的是创建一个渲染器\n\nimport { ShapeFlags } from \"@vue/shared/src\";\nimport { createAppApi } from \"./apiCreateApp\"\nimport { createComponentInstance, setupCompent } from \"./components\";\n\n// 框架都是将组件转化成虚拟DOM -》虚拟DOM生成真实dom 挂载到真实页面上 \nexport function createRenderer(renderOption) {\n    // 让render执行，并且创建一个effect\n    const setupRenderEffect = () => {\n\n    }\n    \n    \n    // +++++++++ 4 ++++++++++++++++\n    // 挂载组件 (mountComponent最核心的就是调用setup/render，拿到函数返回结果来进行渲染)\n    const mountComponent = (initialVnode,container) => {\n        // 1.先有实例\n        // createComponentInstance 创造一个实例\n        /**\n         * 这种写法类似于\n         * let a = 1,b=2,c=3;\n         * a = b = c // a=3\n         * 计算顺序：从右向左\n         */\n        // initialVnode.component = createComponentInstance(initialVnode)\n        // const instance = initialVnode.component\n        const instance =  (initialVnode.component = createComponentInstance(initialVnode))\n        console.log('xxxx',instance);\n        // 2.需要的数据解析到实例上\n        setupCompent(instance)\n        // 3.创建一个effect 让render函数执行\n        setupRenderEffect()\n    }\n\n    // +++++++++ 3 ++++++++++++++++\n    // 处理组件\n    const processMount = (oldVnode,newVnode,container) => {\n        if(oldVnode == null) { // 挂载组件\n            mountComponent(newVnode,container);\n        } else { // 组件更新\n\n        }\n    }\n     // +++++++++ 2 ++++++++++++++++\n    // 虚拟节点比对\n    const patch = (oldVnode,newVnode,container) => {\n        let {shapeFlag} = newVnode;\n        if(shapeFlag & ShapeFlags.ELEMENT) { // 用 & 不用&& 的原因：&比&&计算快，效率更高\n            console.log('元素');\n        } else if(shapeFlag & ShapeFlags.STATEFUL_COMPONENT){\n            console.log('组件',shapeFlag,ShapeFlags.STATEFUL_COMPONENT);\n            // 处理组件\n            processMount(oldVnode,newVnode,container);\n        }\n    }\n    \n     // +++++++++ 1 ++++++++++++++++\n    const render = (vnode,container) => { // 渲染的时候需要虚拟dom和容器\n\n        // 根据不同的虚拟节点，创建对应的真实元素\n        /**\n         * 不管是初始化，还是重新渲染都会重新调用patch方法，\n         * 默认会执行render,render执行的时候是初始化，第一次渲染的时候没有之前的虚拟节点数据\n         */\n\n        /**\n         * 参数一：之前的vnode\n         * 参数二：当前要渲染的vnode\n         * 参数三：要渲染到哪个容器中\n         */ \n       \n        patch(null,vnode,container);\n    }\n    return {\n        createApp: createAppApi(render)\n    }\n}","\nexport const nodeOps = {\n    // createElement  不同的平台创建元素的方式不同\n    // 小程序，浏览器创建元素的方式是不同的\n\n    // 元素：增删改查\n    createElement: element => document.createElement(element),\n    removeElement: child => {\n        const parent = child.parentNode;\n        if(parent) {\n            parent.removeChild(child)\n        }\n    },\n    insertElement: (element,parent,anchor = null) => { // 第三个参数，参照物\n        parent.insertBefore(element,anchor); // 当anchor为null的时候，相当于appendChild\n    },\n    querySelector: selector => document.querySelector(selector),\n    setElementText: (el, text) => el.textContent = text,\n    // 文本操作 创建文本 \n    createText: text => document.createTextNode(text),\n    setText: (node, text) => node.nodeValue = text\n\n}","export const patchAttr = (el,key,value) => {\n    if(value == null) {\n     \tel.removeAttribute(key)   \n    } else {\n        el.setAttribute(key,value);\n    }\n}","export const patchClass = (el,value) =>{\n    if(value == null){\n        value = '';\n    }\n    el.className = value\n}","\n// 这个函数的目的主要是解决给一个元素已经添加了事件，当事件函数发生变化的时候，将变化的函数，还绑定在原来的元素上\nfunction createInvoker(value) {\n    const invoker = (e) => {\n        invoker.value(e);\n    }\n    invoker.value = value;\n    return invoker;\n}\n\nexport const patchEvent = (el,key,value) => {\n    // 缓存事件列表\n    let invokers = (el._vei || (el._vei = {}));\n    let exist = invokers[key];\n    let eventName = key.slice(2).toLowerCase(); // onClick => click\n\n    // 如果用户传递了事件函数，并且该函数已经被缓存过\n    if(value && exist) {\n        exist.value = value;\n    } else {\n        if(value) { // 说明之前没有为元素绑定过事件\n            let invoker = invokers[key] = createInvoker(value);\n            el.addEventListener(eventName,invoker);\n        } else { // 说明要删除元素对应的事件\n            el.removeEventListener(eventName,exist)\n            invokers[key] = undefined;\n        }\n    }\n\n}","export const patchStyle = (el,prev,next) => {\n    let style = el.style;\n    if(next == null) { // 用户删除样式\n        el.removeAttribute('style');\n    } else {\n        if(prev) {\n            for(const key in prev) {\n                if(next[key] == null) { // 老的里面有，新的里面没有\n                    style[key] = '';            \n                }\n            }\n        }\n        // next 中的数据，赋值到style上\n        for(const key in next) {\n            style[key] = next[key];\n        }\n    }\n}","// 里面针对一系列的属性操作\n\nimport { patchAttr } from \"./modules/attr\";\nimport { patchClass } from \"./modules/class\";\nimport { patchEvent } from \"./modules/event\";\nimport { patchStyle } from \"./modules/style\";\n\nexport const patchProp = (el,key,prevValue,nextValue) => {\n    switch(key) {\n        case 'class':\n            patchClass(el,nextValue);\n        break;\n        case 'style':\n            patchStyle(el,prevValue,nextValue);\n        break;\n        default:\n            if(/^on[A-Z]/.test(key)) {\n                patchEvent(el,key,nextValue);\n            } else {\n                patchAttr(el,key,nextValue)\n            }\n        break;    \n    }\n}\n","// 核心就是 提供domApi方法\n\nimport { createRenderer } from \"@vue/runtime-core/src\";\nimport { extend } from \"@vue/shared/src\" // Object.assign\nimport { nodeOps } from \"./nodeOps\"\nimport { patchProp } from \"./patchProp\"\n\n/**\n * 渲染时用到的方法 \n *   处理节点操作：增删改查\n *   属性操作：添加，删除，更新样式，类，属性，事件，文本操作\n */\nconst renderOptions =  extend({patchProp},nodeOps);\n/**\n * @param rootComponent 根组件\n * @param rootProps 根属性\n * <div id=\"#app\"></div>\n * let app = { render() {} }\n * createApp(app,{name:'zs',age:20}).mount('#app')\n */\nexport function createApp (rootComponent,rootProps = null){\n    let app = createRenderer(renderOptions).createApp(rootComponent,rootProps);\n    let {mount} = app;\n    // debugger\n    app.mount = function(container) { // 函数重写 (当调用mount函数的时候，会传递一个container参数) \n        container = nodeOps.querySelector(container);\n        // 在渲染到页面之前，需要将容器内的内容清空\n        container.innerHTML = '';\n        mount(container); // 函数劫持\n    }\n    return app;\n}"],"names":[],"mappings":"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"}