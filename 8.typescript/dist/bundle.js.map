{"version":3,"file":"bundle.js","sources":["../src/index.ts"],"sourcesContent":["let str:string = 'Hello World!'\n// console.log(str);\n\nconst tuple:[string,boolean,number] = ['1',true,1]\n\nlet r1 = tuple.pop(); // 删除并返回数组的最后一个元素，pop会改变原数组\n// r1的数据类型可以是：string,boolean,number,undefined\n\n// push的数据类型只要在已经定义的类型中就可以，可以push多个数据\ntuple.push('str',4,5,6,false); // push的时候 可以放入元组中定义的类型\n\n// tuple[2]=false; // 不能通过索引更改元组\n\nconsole.log(tuple);\n\n/**\n * 元组的使用场景；\n *  - 数据交换\n */\n\nfunction fun(obj:object):void {\n    console.log(obj);\n} \nfun({a:1})\nfun([1])\n\n enum ROLE{\n    ADMIN,\n    MAMAGE,\n    USER\n}\nconsole.log(ROLE.ADMIN);\n"],"names":[],"mappings":";;;IACA;IAEA,IAAM,KAAK,GAA2B,CAAC,GAAG,EAAC,IAAI,EAAC,CAAC,CAAC,CAAA;IAEzC,KAAK,CAAC,GAAG,GAAG;IACrB;IAEA;IACA,KAAK,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,KAAK,CAAC,CAAC;IAE9B;IAEA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAEnB;;;;IAKA,SAAS,GAAG,CAAC,GAAU;QACnB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,GAAG,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAA;IACV,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAEP,IAAK,IAIL;IAJA,WAAK,IAAI;QACN,iCAAK,CAAA;QACL,mCAAM,CAAA;QACN,+BAAI,CAAA;IACR,CAAC,EAJK,IAAI,KAAJ,IAAI,QAIT;IACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;;;;;;"}